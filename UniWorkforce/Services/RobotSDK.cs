// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RobotSDK.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UniWorkforce.Services {

  /// <summary>Holder for reflection information generated from RobotSDK.proto</summary>
  public static partial class RobotSDKReflection {

    #region Descriptor
    /// <summary>File descriptor for RobotSDK.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RobotSDKReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Sb2JvdFNESy5wcm90bxIIUm9ib3RTREsiQQoMTG9naW5SZXF1ZXN0EgwK",
            "BENvZGUYASABKAkSEQoJTG9naW5OYW1lGAIgASgJEhAKCFBhc3N3b3JkGAMg",
            "ASgJIkQKDUxvZ2luUmVzcG9uc2USIgoEQ29kZRgBIAEoDjIULlJvYm90U0RL",
            "LlJlc3VsdENvZGUSDwoHTWVzc2FnZRgCIAEoCSI9ChNDaGVja1Byb2Nlc3NS",
            "ZXF1ZXN0EhMKC1Byb2Nlc3NOYW1lGAEgASgJEhEKCVNlc3Npb25JZBgCIAEo",
            "CSJ4ChRDaGVja1Byb2Nlc3NSZXNwb25zZRIiCgRDb2RlGAEgASgOMhQuUm9i",
            "b3RTREsuUmVzdWx0Q29kZRIPCgdNZXNzYWdlGAIgASgJEisKBlJlc3VsdBgD",
            "IAEoCzIbLlJvYm90U0RLLkNoZWNrUHJvY2Vzc01vZGVsIl0KEUNoZWNrUHJv",
            "Y2Vzc01vZGVsEg8KB0lzRXhpc3QYASABKAgSDwoHVmVyc2lvbhgCIAEoCRIT",
            "CgtSb2JvdFR5cGVJRBgDIAEoCRIRCglSb2JvdFR5cGUYBCABKAkiowEKDlB1",
            "Ymxpc2hSZXF1ZXN0EhEKCVNlc3Npb25JZBgBIAEoCRITCgtQcm9jZXNzTmFt",
            "ZRgCIAEoCRIaChJQcm9jZXNzRGVzY3JpcHRpb24YAyABKAkSEgoKRmlsZVN0",
            "cmVhbRgEIAEoDBIPCgdWZXJzaW9uGAUgASgJEhMKC1B1Ymxpc2hUaW1lGAYg",
            "ASgJEhMKC1JvYm90VHlwZUlEGAcgASgJIkYKD1B1Ymxpc2hSZXNwb25zZRIi",
            "CgRDb2RlGAEgASgOMhQuUm9ib3RTREsuUmVzdWx0Q29kZRIPCgdNZXNzYWdl",
            "GAIgASgJIj4KEUNoZWNrUm9ib3RSZXF1ZXN0EhUKDVJvYm90VW5pcXVlTm8Y",
            "ASABKAkSEgoKTGljZW5zZUtleRgCIAEoCSJ0ChJDaGVja1JvYm90UmVzcG9u",
            "c2USIgoEQ29kZRgBIAEoDjIULlJvYm90U0RLLlJlc3VsdENvZGUSDwoHTWVz",
            "c2FnZRgCIAEoCRIpCgZSZXN1bHQYAyABKAsyGS5Sb2JvdFNESy5DaGVja1Jv",
            "Ym90TW9kZWwiMwoPQ2hlY2tSb2JvdE1vZGVsEg8KB0lzUmlnaHQYASABKAgS",
            "DwoHUm9ib3RJZBgCIAEoCSI1Cg1Kb2JMb2dSZXF1ZXN0EiQKBExvZ3MYASAD",
            "KAsyFi5Sb2JvdFNESy5Kb2JMb2dQYXJhbXMi8QEKDEpvYkxvZ1BhcmFtcxIT",
            "CgtEZXNjcmlwdGlvbhgBIAEoCRIOCgZUYXNrTm8YAiABKAkSEwoLUHJvY2Vz",
            "c05hbWUYAyABKAkSFAoMQWN0aXZpdHlUeXBlGAQgASgJEhMKC0NyZWF0ZWRU",
            "aW1lGAUgASgJEhIKClBhcmFtZXRlcnMYBiABKAkSDgoGVGFza0lEGAcgASgJ",
            "Eg8KB1JvYm90SUQYCCABKAkSEAoIVW5pcXVlTm8YCSABKAkSHwoEVHlwZRgK",
            "IAEoDjIRLlJvYm90U0RLLkxvZ1R5cGUSFAoMQWN0aXZpdHlOYW1lGAsgASgJ",
            "IkUKDkpvYkxvZ1Jlc3BvbnNlEiIKBENvZGUYASABKA4yFC5Sb2JvdFNESy5S",
            "ZXN1bHRDb2RlEg8KB01lc3NhZ2UYAiABKAkihwEKEEhlYXJ0QmVhdFJlcXVl",
            "c3QSKAoKUm9ib3RTdGF0ZRgBIAEoDjIULlJvYm90U0RLLlJvYm90U3RhdGUS",
            "FQoNUm9ib3RVbmlxdWVObxgCIAEoCRIRCglSb2JvdFRpbWUYAyABKAkSDwoH",
            "Um9ib3RJUBgEIAEoCRIOCgZUYXNrSUQYBSABKAkiWAoRSGVhcnRCZWF0UmVz",
            "cG9uc2USIgoEQ29kZRgBIAEoDjIULlJvYm90U0RLLlJlc3VsdENvZGUSDwoH",
            "TWVzc2FnZRgCIAEoCRIOCgZBY3Rpb24YAyABKAkiJAoLVGFza1JlcXVlc3QS",
            "FQoNUm9ib3RVbmlxdWVObxgBIAEoCSJrCgxUYXNrUmVzcG9uc2USIgoEQ29k",
            "ZRgBIAEoDjIULlJvYm90U0RLLlJlc3VsdENvZGUSDwoHTWVzc2FnZRgCIAEo",
            "CRImCgZSZXN1bHQYAyABKAsyFi5Sb2JvdFNESy5QYWNrYWdlTW9kZWwidQoM",
            "UGFja2FnZU1vZGVsEhEKCVBhY2thZ2VJRBgBIAEoCRITCgtQYWNrYWdlTmFt",
            "ZRgCIAEoCRIMCgRmaWxlGAMgASgMEg4KBlRhc2tJRBgEIAEoCRIPCgdWZXJz",
            "aW9uGAUgASgJEg4KBlRhc2tObxgGIAEoCSJoChFUYXNrU3RhdHVzUmVxdWVz",
            "dBIsCgpUYXNrU3RhdHVzGAEgASgOMhguUm9ib3RTREsuVGFza1N0YXR1c0Vu",
            "dW0SDgoGVGFza0lEGAIgASgJEhUKDVJvYm90VW5pcXVlTm8YAyABKAkiSQoS",
            "VGFza1N0YXR1c1Jlc3BvbnNlEiIKBENvZGUYASABKA4yFC5Sb2JvdFNESy5S",
            "ZXN1bHRDb2RlEg8KB01lc3NhZ2UYAiABKAkiKAoTR2V0Um9ib3RUeXBlUmVx",
            "dWVzdBIRCglTZXNzaW9uSWQYASABKAkidQoUR2V0Um9ib3RUeXBlUmVzcG9u",
            "c2USIgoEQ29kZRgBIAEoDjIULlJvYm90U0RLLlJlc3VsdENvZGUSDwoHTWVz",
            "c2FnZRgCIAEoCRIoCgZSZXN1bHQYAyADKAsyGC5Sb2JvdFNESy5Sb2JvdFR5",
            "cGVNb2RlbCIvCg5Sb2JvdFR5cGVNb2RlbBIKCgJJRBgBIAEoCRIRCglSb2Jv",
            "dFR5cGUYAiABKAkqmQEKClJlc3VsdENvZGUSDwoLU3VjY2Vzc0NvZGUQABIU",
            "ChBVbkF1dGhvcml6ZWRDb2RlEAESDQoJRXJyb3JDb2RlEAISFAoQTG9naW5P",
            "dXRUaW1lQ29kZRADEg8KC1VuRmluZFJvYm90EAQSEQoNVW5zcGVjaWZ5Q29k",
            "ZRAFEg4KClNlcnZlckJ1c3kQBhILCgdFeHBpcmVkEAcqYQoHTG9nVHlwZRIS",
            "Cg5VbnNwZWNpZmllZExvZxAAEgwKCFRyYWNlTG9nEAESCwoHSW5mb0xvZxAC",
            "EgsKB1dhcm5Mb2cQAxIMCghFcnJvckxvZxAEEgwKCEZhdGFsTG9nEAUqSwoK",
            "Um9ib3RTdGF0ZRIHCgNSdW4QABIQCgxEaXNjb25uZWN0ZWQQARIJCgVFcnJv",
            "chACEggKBFBlbmQQAxINCglVbnNwZWNpZnkQCSphCg5UYXNrU3RhdHVzRW51",
            "bRILCgdQZW5kaW5nEAASCwoHUnVubmluZxABEgkKBUZhdWx0EAISDAoIRmlu",
            "aXNoZWQQAxILCgdTdG9wcGVkEAQSDwoLVW5zcGVjaWZpZWQQCTKQBQoIUm9i",
            "b3RTREsSQAoNRGVzaWduZXJMb2dpbhIWLlJvYm90U0RLLkxvZ2luUmVxdWVz",
            "dBoXLlJvYm90U0RLLkxvZ2luUmVzcG9uc2USTQoMQ2hlY2tQcm9jZXNzEh0u",
            "Um9ib3RTREsuQ2hlY2tQcm9jZXNzUmVxdWVzdBoeLlJvYm90U0RLLkNoZWNr",
            "UHJvY2Vzc1Jlc3BvbnNlEkUKDlB1Ymxpc2hQcm9jZXNzEhguUm9ib3RTREsu",
            "UHVibGlzaFJlcXVlc3QaGS5Sb2JvdFNESy5QdWJsaXNoUmVzcG9uc2USRwoK",
            "Q2hlY2tSb2JvdBIbLlJvYm90U0RLLkNoZWNrUm9ib3RSZXF1ZXN0GhwuUm9i",
            "b3RTREsuQ2hlY2tSb2JvdFJlc3BvbnNlEj8KClNlbmRKb2JMb2cSFy5Sb2Jv",
            "dFNESy5Kb2JMb2dSZXF1ZXN0GhguUm9ib3RTREsuSm9iTG9nUmVzcG9uc2US",
            "RAoJSGVhcnRCZWF0EhouUm9ib3RTREsuSGVhcnRCZWF0UmVxdWVzdBobLlJv",
            "Ym90U0RLLkhlYXJ0QmVhdFJlc3BvbnNlEksKDlNlbmRUYXNrU3RhdHVzEhsu",
            "Um9ib3RTREsuVGFza1N0YXR1c1JlcXVlc3QaHC5Sb2JvdFNESy5UYXNrU3Rh",
            "dHVzUmVzcG9uc2USUQoQR2V0Um9ib3RUeXBlTGlzdBIdLlJvYm90U0RLLkdl",
            "dFJvYm90VHlwZVJlcXVlc3QaHi5Sb2JvdFNESy5HZXRSb2JvdFR5cGVSZXNw",
            "b25zZRI8CgdHZXRUYXNrEhUuUm9ib3RTREsuVGFza1JlcXVlc3QaFi5Sb2Jv",
            "dFNESy5UYXNrUmVzcG9uc2UoATABQhiqAhVVbmlXb3JrZm9yY2UuU2Vydmlj",
            "ZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::UniWorkforce.Services.ResultCode), typeof(global::UniWorkforce.Services.LogType), typeof(global::UniWorkforce.Services.RobotState), typeof(global::UniWorkforce.Services.TaskStatusEnum), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.LoginRequest), global::UniWorkforce.Services.LoginRequest.Parser, new[]{ "Code", "LoginName", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.LoginResponse), global::UniWorkforce.Services.LoginResponse.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.CheckProcessRequest), global::UniWorkforce.Services.CheckProcessRequest.Parser, new[]{ "ProcessName", "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.CheckProcessResponse), global::UniWorkforce.Services.CheckProcessResponse.Parser, new[]{ "Code", "Message", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.CheckProcessModel), global::UniWorkforce.Services.CheckProcessModel.Parser, new[]{ "IsExist", "Version", "RobotTypeID", "RobotType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.PublishRequest), global::UniWorkforce.Services.PublishRequest.Parser, new[]{ "SessionId", "ProcessName", "ProcessDescription", "FileStream", "Version", "PublishTime", "RobotTypeID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.PublishResponse), global::UniWorkforce.Services.PublishResponse.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.CheckRobotRequest), global::UniWorkforce.Services.CheckRobotRequest.Parser, new[]{ "RobotUniqueNo", "LicenseKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.CheckRobotResponse), global::UniWorkforce.Services.CheckRobotResponse.Parser, new[]{ "Code", "Message", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.CheckRobotModel), global::UniWorkforce.Services.CheckRobotModel.Parser, new[]{ "IsRight", "RobotId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.JobLogRequest), global::UniWorkforce.Services.JobLogRequest.Parser, new[]{ "Logs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.JobLogParams), global::UniWorkforce.Services.JobLogParams.Parser, new[]{ "Description", "TaskNo", "ProcessName", "ActivityType", "CreatedTime", "Parameters", "TaskID", "RobotID", "UniqueNo", "Type", "ActivityName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.JobLogResponse), global::UniWorkforce.Services.JobLogResponse.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.HeartBeatRequest), global::UniWorkforce.Services.HeartBeatRequest.Parser, new[]{ "RobotState", "RobotUniqueNo", "RobotTime", "RobotIP", "TaskID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.HeartBeatResponse), global::UniWorkforce.Services.HeartBeatResponse.Parser, new[]{ "Code", "Message", "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.TaskRequest), global::UniWorkforce.Services.TaskRequest.Parser, new[]{ "RobotUniqueNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.TaskResponse), global::UniWorkforce.Services.TaskResponse.Parser, new[]{ "Code", "Message", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.PackageModel), global::UniWorkforce.Services.PackageModel.Parser, new[]{ "PackageID", "PackageName", "File", "TaskID", "Version", "TaskNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.TaskStatusRequest), global::UniWorkforce.Services.TaskStatusRequest.Parser, new[]{ "TaskStatus", "TaskID", "RobotUniqueNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.TaskStatusResponse), global::UniWorkforce.Services.TaskStatusResponse.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.GetRobotTypeRequest), global::UniWorkforce.Services.GetRobotTypeRequest.Parser, new[]{ "SessionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.GetRobotTypeResponse), global::UniWorkforce.Services.GetRobotTypeResponse.Parser, new[]{ "Code", "Message", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UniWorkforce.Services.RobotTypeModel), global::UniWorkforce.Services.RobotTypeModel.Parser, new[]{ "ID", "RobotType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResultCode {
    /// <summary>
    /// 成功
    /// </summary>
    [pbr::OriginalName("SuccessCode")] SuccessCode = 0,
    /// <summary>
    /// 未授权
    /// </summary>
    [pbr::OriginalName("UnAuthorizedCode")] UnAuthorizedCode = 1,
    /// <summary>
    ///错误
    /// </summary>
    [pbr::OriginalName("ErrorCode")] ErrorCode = 2,
    /// <summary>
    ///等待
    /// </summary>
    [pbr::OriginalName("LoginOutTimeCode")] LoginOutTimeCode = 3,
    /// <summary>
    ///未找到机器人
    /// </summary>
    [pbr::OriginalName("UnFindRobot")] UnFindRobot = 4,
    /// <summary>
    /// 未指定
    /// </summary>
    [pbr::OriginalName("UnspecifyCode")] UnspecifyCode = 5,
    /// <summary>
    ///服务器繁忙
    /// </summary>
    [pbr::OriginalName("ServerBusy")] ServerBusy = 6,
    /// <summary>
    ///登录过期
    /// </summary>
    [pbr::OriginalName("Expired")] Expired = 7,
  }

  public enum LogType {
    /// <summary>
    ///未指定
    /// </summary>
    [pbr::OriginalName("UnspecifiedLog")] UnspecifiedLog = 0,
    /// <summary>
    /// 追踪日志
    /// </summary>
    [pbr::OriginalName("TraceLog")] TraceLog = 1,
    /// <summary>
    /// 信息日志
    /// </summary>
    [pbr::OriginalName("InfoLog")] InfoLog = 2,
    /// <summary>
    ///提示
    /// </summary>
    [pbr::OriginalName("WarnLog")] WarnLog = 3,
    /// <summary>
    ///错误日志
    /// </summary>
    [pbr::OriginalName("ErrorLog")] ErrorLog = 4,
    /// <summary>
    ///致命
    /// </summary>
    [pbr::OriginalName("FatalLog")] FatalLog = 5,
  }

  public enum RobotState {
    /// <summary>
    /// 正在运行
    /// </summary>
    [pbr::OriginalName("Run")] Run = 0,
    /// <summary>
    /// 未连接
    /// </summary>
    [pbr::OriginalName("Disconnected")] Disconnected = 1,
    /// <summary>
    ///错误
    /// </summary>
    [pbr::OriginalName("Error")] Error = 2,
    /// <summary>
    ///等待
    /// </summary>
    [pbr::OriginalName("Pend")] Pend = 3,
    /// <summary>
    /// 未指定
    /// </summary>
    [pbr::OriginalName("Unspecify")] Unspecify = 9,
  }

  public enum TaskStatusEnum {
    /// <summary>
    /// 等待中
    /// </summary>
    [pbr::OriginalName("Pending")] Pending = 0,
    /// <summary>
    /// 运行中
    /// </summary>
    [pbr::OriginalName("Running")] Running = 1,
    /// <summary>
    /// 运行故障
    /// </summary>
    [pbr::OriginalName("Fault")] Fault = 2,
    /// <summary>
    /// 运行完成
    /// </summary>
    [pbr::OriginalName("Finished")] Finished = 3,
    /// <summary>
    /// 运行停止
    /// </summary>
    [pbr::OriginalName("Stopped")] Stopped = 4,
    /// <summary>
    /// 未指定
    /// </summary>
    [pbr::OriginalName("Unspecified")] Unspecified = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  ///设计器登录校验
  /// </summary>
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      code_ = other.code_;
      loginName_ = other.loginName_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    /// <summary>
    ///公司code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LoginName" field.</summary>
    public const int LoginNameFieldNumber = 2;
    private string loginName_ = "";
    /// <summary>
    ///登录名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginName {
      get { return loginName_; }
      set {
        loginName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    /// <summary>
    ///密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (LoginName != other.LoginName) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (LoginName.Length != 0) hash ^= LoginName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (LoginName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LoginName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (LoginName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.LoginName.Length != 0) {
        LoginName = other.LoginName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            LoginName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///验证流程是否存在
  /// </summary>
  public sealed partial class CheckProcessRequest : pb::IMessage<CheckProcessRequest> {
    private static readonly pb::MessageParser<CheckProcessRequest> _parser = new pb::MessageParser<CheckProcessRequest>(() => new CheckProcessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckProcessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessRequest(CheckProcessRequest other) : this() {
      processName_ = other.processName_;
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessRequest Clone() {
      return new CheckProcessRequest(this);
    }

    /// <summary>Field number for the "ProcessName" field.</summary>
    public const int ProcessNameFieldNumber = 1;
    private string processName_ = "";
    /// <summary>
    ///流程名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProcessName {
      get { return processName_; }
      set {
        processName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    /// <summary>
    ///登录SessionId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckProcessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckProcessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProcessName != other.ProcessName) return false;
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProcessName.Length != 0) hash ^= ProcessName.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProcessName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProcessName);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProcessName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessName);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckProcessRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProcessName.Length != 0) {
        ProcessName = other.ProcessName;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProcessName = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckProcessResponse : pb::IMessage<CheckProcessResponse> {
    private static readonly pb::MessageParser<CheckProcessResponse> _parser = new pb::MessageParser<CheckProcessResponse>(() => new CheckProcessResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckProcessResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessResponse(CheckProcessResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessResponse Clone() {
      return new CheckProcessResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 3;
    private global::UniWorkforce.Services.CheckProcessModel result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.CheckProcessModel Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckProcessResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckProcessResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (result_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckProcessResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::UniWorkforce.Services.CheckProcessModel();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (result_ == null) {
              Result = new global::UniWorkforce.Services.CheckProcessModel();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckProcessModel : pb::IMessage<CheckProcessModel> {
    private static readonly pb::MessageParser<CheckProcessModel> _parser = new pb::MessageParser<CheckProcessModel>(() => new CheckProcessModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckProcessModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessModel(CheckProcessModel other) : this() {
      isExist_ = other.isExist_;
      version_ = other.version_;
      robotTypeID_ = other.robotTypeID_;
      robotType_ = other.robotType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckProcessModel Clone() {
      return new CheckProcessModel(this);
    }

    /// <summary>Field number for the "IsExist" field.</summary>
    public const int IsExistFieldNumber = 1;
    private bool isExist_;
    /// <summary>
    ///是否已经存在、
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExist {
      get { return isExist_; }
      set {
        isExist_ = value;
      }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    ///如果已经存在，输入版本号，不存在为0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotTypeID" field.</summary>
    public const int RobotTypeIDFieldNumber = 3;
    private string robotTypeID_ = "";
    /// <summary>
    ///厂商的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotTypeID {
      get { return robotTypeID_; }
      set {
        robotTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotType" field.</summary>
    public const int RobotTypeFieldNumber = 4;
    private string robotType_ = "";
    /// <summary>
    ///厂商名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotType {
      get { return robotType_; }
      set {
        robotType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckProcessModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckProcessModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsExist != other.IsExist) return false;
      if (Version != other.Version) return false;
      if (RobotTypeID != other.RobotTypeID) return false;
      if (RobotType != other.RobotType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsExist != false) hash ^= IsExist.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (RobotTypeID.Length != 0) hash ^= RobotTypeID.GetHashCode();
      if (RobotType.Length != 0) hash ^= RobotType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsExist != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsExist);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (RobotTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RobotTypeID);
      }
      if (RobotType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RobotType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsExist != false) {
        size += 1 + 1;
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (RobotTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotTypeID);
      }
      if (RobotType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckProcessModel other) {
      if (other == null) {
        return;
      }
      if (other.IsExist != false) {
        IsExist = other.IsExist;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.RobotTypeID.Length != 0) {
        RobotTypeID = other.RobotTypeID;
      }
      if (other.RobotType.Length != 0) {
        RobotType = other.RobotType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsExist = input.ReadBool();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            RobotTypeID = input.ReadString();
            break;
          }
          case 34: {
            RobotType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///发布流程和数据
  /// </summary>
  public sealed partial class PublishRequest : pb::IMessage<PublishRequest> {
    private static readonly pb::MessageParser<PublishRequest> _parser = new pb::MessageParser<PublishRequest>(() => new PublishRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishRequest(PublishRequest other) : this() {
      sessionId_ = other.sessionId_;
      processName_ = other.processName_;
      processDescription_ = other.processDescription_;
      fileStream_ = other.fileStream_;
      version_ = other.version_;
      publishTime_ = other.publishTime_;
      robotTypeID_ = other.robotTypeID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishRequest Clone() {
      return new PublishRequest(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    ///登录SessionId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessName" field.</summary>
    public const int ProcessNameFieldNumber = 2;
    private string processName_ = "";
    /// <summary>
    ///流程名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProcessName {
      get { return processName_; }
      set {
        processName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessDescription" field.</summary>
    public const int ProcessDescriptionFieldNumber = 3;
    private string processDescription_ = "";
    /// <summary>
    ///流程描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProcessDescription {
      get { return processDescription_; }
      set {
        processDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileStream" field.</summary>
    public const int FileStreamFieldNumber = 4;
    private pb::ByteString fileStream_ = pb::ByteString.Empty;
    /// <summary>
    ///二进制文件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FileStream {
      get { return fileStream_; }
      set {
        fileStream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PublishTime" field.</summary>
    public const int PublishTimeFieldNumber = 6;
    private string publishTime_ = "";
    /// <summary>
    ///发布时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublishTime {
      get { return publishTime_; }
      set {
        publishTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotTypeID" field.</summary>
    public const int RobotTypeIDFieldNumber = 7;
    private string robotTypeID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotTypeID {
      get { return robotTypeID_; }
      set {
        robotTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (ProcessName != other.ProcessName) return false;
      if (ProcessDescription != other.ProcessDescription) return false;
      if (FileStream != other.FileStream) return false;
      if (Version != other.Version) return false;
      if (PublishTime != other.PublishTime) return false;
      if (RobotTypeID != other.RobotTypeID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (ProcessName.Length != 0) hash ^= ProcessName.GetHashCode();
      if (ProcessDescription.Length != 0) hash ^= ProcessDescription.GetHashCode();
      if (FileStream.Length != 0) hash ^= FileStream.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (PublishTime.Length != 0) hash ^= PublishTime.GetHashCode();
      if (RobotTypeID.Length != 0) hash ^= RobotTypeID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (ProcessName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProcessName);
      }
      if (ProcessDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProcessDescription);
      }
      if (FileStream.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(FileStream);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (PublishTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PublishTime);
      }
      if (RobotTypeID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RobotTypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (ProcessName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessName);
      }
      if (ProcessDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessDescription);
      }
      if (FileStream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FileStream);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (PublishTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublishTime);
      }
      if (RobotTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotTypeID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.ProcessName.Length != 0) {
        ProcessName = other.ProcessName;
      }
      if (other.ProcessDescription.Length != 0) {
        ProcessDescription = other.ProcessDescription;
      }
      if (other.FileStream.Length != 0) {
        FileStream = other.FileStream;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.PublishTime.Length != 0) {
        PublishTime = other.PublishTime;
      }
      if (other.RobotTypeID.Length != 0) {
        RobotTypeID = other.RobotTypeID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            ProcessName = input.ReadString();
            break;
          }
          case 26: {
            ProcessDescription = input.ReadString();
            break;
          }
          case 34: {
            FileStream = input.ReadBytes();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 50: {
            PublishTime = input.ReadString();
            break;
          }
          case 58: {
            RobotTypeID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PublishResponse : pb::IMessage<PublishResponse> {
    private static readonly pb::MessageParser<PublishResponse> _parser = new pb::MessageParser<PublishResponse>(() => new PublishResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishResponse(PublishResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishResponse Clone() {
      return new PublishResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///校验机器唯一码
  /// </summary>
  public sealed partial class CheckRobotRequest : pb::IMessage<CheckRobotRequest> {
    private static readonly pb::MessageParser<CheckRobotRequest> _parser = new pb::MessageParser<CheckRobotRequest>(() => new CheckRobotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckRobotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotRequest(CheckRobotRequest other) : this() {
      robotUniqueNo_ = other.robotUniqueNo_;
      licenseKey_ = other.licenseKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotRequest Clone() {
      return new CheckRobotRequest(this);
    }

    /// <summary>Field number for the "RobotUniqueNo" field.</summary>
    public const int RobotUniqueNoFieldNumber = 1;
    private string robotUniqueNo_ = "";
    /// <summary>
    ///唯一码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotUniqueNo {
      get { return robotUniqueNo_; }
      set {
        robotUniqueNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LicenseKey" field.</summary>
    public const int LicenseKeyFieldNumber = 2;
    private string licenseKey_ = "";
    /// <summary>
    ///机器人license
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LicenseKey {
      get { return licenseKey_; }
      set {
        licenseKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckRobotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckRobotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RobotUniqueNo != other.RobotUniqueNo) return false;
      if (LicenseKey != other.LicenseKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RobotUniqueNo.Length != 0) hash ^= RobotUniqueNo.GetHashCode();
      if (LicenseKey.Length != 0) hash ^= LicenseKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RobotUniqueNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RobotUniqueNo);
      }
      if (LicenseKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LicenseKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RobotUniqueNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotUniqueNo);
      }
      if (LicenseKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicenseKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckRobotRequest other) {
      if (other == null) {
        return;
      }
      if (other.RobotUniqueNo.Length != 0) {
        RobotUniqueNo = other.RobotUniqueNo;
      }
      if (other.LicenseKey.Length != 0) {
        LicenseKey = other.LicenseKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RobotUniqueNo = input.ReadString();
            break;
          }
          case 18: {
            LicenseKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckRobotResponse : pb::IMessage<CheckRobotResponse> {
    private static readonly pb::MessageParser<CheckRobotResponse> _parser = new pb::MessageParser<CheckRobotResponse>(() => new CheckRobotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckRobotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotResponse(CheckRobotResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotResponse Clone() {
      return new CheckRobotResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 3;
    private global::UniWorkforce.Services.CheckRobotModel result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.CheckRobotModel Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckRobotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckRobotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (result_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckRobotResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::UniWorkforce.Services.CheckRobotModel();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (result_ == null) {
              Result = new global::UniWorkforce.Services.CheckRobotModel();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckRobotModel : pb::IMessage<CheckRobotModel> {
    private static readonly pb::MessageParser<CheckRobotModel> _parser = new pb::MessageParser<CheckRobotModel>(() => new CheckRobotModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckRobotModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotModel(CheckRobotModel other) : this() {
      isRight_ = other.isRight_;
      robotId_ = other.robotId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckRobotModel Clone() {
      return new CheckRobotModel(this);
    }

    /// <summary>Field number for the "IsRight" field.</summary>
    public const int IsRightFieldNumber = 1;
    private bool isRight_;
    /// <summary>
    ///true代表唯一码正确，false唯一码错误
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRight {
      get { return isRight_; }
      set {
        isRight_ = value;
      }
    }

    /// <summary>Field number for the "RobotId" field.</summary>
    public const int RobotIdFieldNumber = 2;
    private string robotId_ = "";
    /// <summary>
    ///机器人ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotId {
      get { return robotId_; }
      set {
        robotId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckRobotModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckRobotModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsRight != other.IsRight) return false;
      if (RobotId != other.RobotId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsRight != false) hash ^= IsRight.GetHashCode();
      if (RobotId.Length != 0) hash ^= RobotId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsRight != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsRight);
      }
      if (RobotId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RobotId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsRight != false) {
        size += 1 + 1;
      }
      if (RobotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckRobotModel other) {
      if (other == null) {
        return;
      }
      if (other.IsRight != false) {
        IsRight = other.IsRight;
      }
      if (other.RobotId.Length != 0) {
        RobotId = other.RobotId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsRight = input.ReadBool();
            break;
          }
          case 18: {
            RobotId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///接收日志信息
  /// </summary>
  public sealed partial class JobLogRequest : pb::IMessage<JobLogRequest> {
    private static readonly pb::MessageParser<JobLogRequest> _parser = new pb::MessageParser<JobLogRequest>(() => new JobLogRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobLogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogRequest(JobLogRequest other) : this() {
      logs_ = other.logs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogRequest Clone() {
      return new JobLogRequest(this);
    }

    /// <summary>Field number for the "Logs" field.</summary>
    public const int LogsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::UniWorkforce.Services.JobLogParams> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(10, global::UniWorkforce.Services.JobLogParams.Parser);
    private readonly pbc::RepeatedField<global::UniWorkforce.Services.JobLogParams> logs_ = new pbc::RepeatedField<global::UniWorkforce.Services.JobLogParams>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UniWorkforce.Services.JobLogParams> Logs {
      get { return logs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobLogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobLogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!logs_.Equals(other.logs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= logs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      logs_.WriteTo(output, _repeated_logs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobLogRequest other) {
      if (other == null) {
        return;
      }
      logs_.Add(other.logs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JobLogParams : pb::IMessage<JobLogParams> {
    private static readonly pb::MessageParser<JobLogParams> _parser = new pb::MessageParser<JobLogParams>(() => new JobLogParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobLogParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogParams(JobLogParams other) : this() {
      description_ = other.description_;
      taskNo_ = other.taskNo_;
      processName_ = other.processName_;
      activityType_ = other.activityType_;
      createdTime_ = other.createdTime_;
      parameters_ = other.parameters_;
      taskID_ = other.taskID_;
      robotID_ = other.robotID_;
      uniqueNo_ = other.uniqueNo_;
      type_ = other.type_;
      activityName_ = other.activityName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogParams Clone() {
      return new JobLogParams(this);
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    /// <summary>
    ///日志内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskNo" field.</summary>
    public const int TaskNoFieldNumber = 2;
    private string taskNo_ = "";
    /// <summary>
    ///任务编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskNo {
      get { return taskNo_; }
      set {
        taskNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessName" field.</summary>
    public const int ProcessNameFieldNumber = 3;
    private string processName_ = "";
    /// <summary>
    ///流程名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProcessName {
      get { return processName_; }
      set {
        processName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityType" field.</summary>
    public const int ActivityTypeFieldNumber = 4;
    private string activityType_ = "";
    /// <summary>
    ///活动类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityType {
      get { return activityType_; }
      set {
        activityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedTime" field.</summary>
    public const int CreatedTimeFieldNumber = 5;
    private string createdTime_ = "";
    /// <summary>
    ///执行时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedTime {
      get { return createdTime_; }
      set {
        createdTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Parameters" field.</summary>
    public const int ParametersFieldNumber = 6;
    private string parameters_ = "";
    /// <summary>
    ///执行参数：如果有多个参数，请用||隔开，
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parameters {
      get { return parameters_; }
      set {
        parameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskID" field.</summary>
    public const int TaskIDFieldNumber = 7;
    private string taskID_ = "";
    /// <summary>
    ///JobId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotID" field.</summary>
    public const int RobotIDFieldNumber = 8;
    private string robotID_ = "";
    /// <summary>
    ///机器人ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotID {
      get { return robotID_; }
      set {
        robotID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UniqueNo" field.</summary>
    public const int UniqueNoFieldNumber = 9;
    private string uniqueNo_ = "";
    /// <summary>
    ///机器人唯一码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueNo {
      get { return uniqueNo_; }
      set {
        uniqueNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 10;
    private global::UniWorkforce.Services.LogType type_ = 0;
    /// <summary>
    ///日志类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.LogType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 11;
    private string activityName_ = "";
    /// <summary>
    ///活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobLogParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobLogParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (TaskNo != other.TaskNo) return false;
      if (ProcessName != other.ProcessName) return false;
      if (ActivityType != other.ActivityType) return false;
      if (CreatedTime != other.CreatedTime) return false;
      if (Parameters != other.Parameters) return false;
      if (TaskID != other.TaskID) return false;
      if (RobotID != other.RobotID) return false;
      if (UniqueNo != other.UniqueNo) return false;
      if (Type != other.Type) return false;
      if (ActivityName != other.ActivityName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (TaskNo.Length != 0) hash ^= TaskNo.GetHashCode();
      if (ProcessName.Length != 0) hash ^= ProcessName.GetHashCode();
      if (ActivityType.Length != 0) hash ^= ActivityType.GetHashCode();
      if (CreatedTime.Length != 0) hash ^= CreatedTime.GetHashCode();
      if (Parameters.Length != 0) hash ^= Parameters.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (RobotID.Length != 0) hash ^= RobotID.GetHashCode();
      if (UniqueNo.Length != 0) hash ^= UniqueNo.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (TaskNo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskNo);
      }
      if (ProcessName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProcessName);
      }
      if (ActivityType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ActivityType);
      }
      if (CreatedTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedTime);
      }
      if (Parameters.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Parameters);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TaskID);
      }
      if (RobotID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RobotID);
      }
      if (UniqueNo.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UniqueNo);
      }
      if (Type != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Type);
      }
      if (ActivityName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ActivityName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (TaskNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskNo);
      }
      if (ProcessName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessName);
      }
      if (ActivityType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityType);
      }
      if (CreatedTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedTime);
      }
      if (Parameters.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parameters);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (RobotID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotID);
      }
      if (UniqueNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueNo);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobLogParams other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.TaskNo.Length != 0) {
        TaskNo = other.TaskNo;
      }
      if (other.ProcessName.Length != 0) {
        ProcessName = other.ProcessName;
      }
      if (other.ActivityType.Length != 0) {
        ActivityType = other.ActivityType;
      }
      if (other.CreatedTime.Length != 0) {
        CreatedTime = other.CreatedTime;
      }
      if (other.Parameters.Length != 0) {
        Parameters = other.Parameters;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      if (other.RobotID.Length != 0) {
        RobotID = other.RobotID;
      }
      if (other.UniqueNo.Length != 0) {
        UniqueNo = other.UniqueNo;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            TaskNo = input.ReadString();
            break;
          }
          case 26: {
            ProcessName = input.ReadString();
            break;
          }
          case 34: {
            ActivityType = input.ReadString();
            break;
          }
          case 42: {
            CreatedTime = input.ReadString();
            break;
          }
          case 50: {
            Parameters = input.ReadString();
            break;
          }
          case 58: {
            TaskID = input.ReadString();
            break;
          }
          case 66: {
            RobotID = input.ReadString();
            break;
          }
          case 74: {
            UniqueNo = input.ReadString();
            break;
          }
          case 80: {
            Type = (global::UniWorkforce.Services.LogType) input.ReadEnum();
            break;
          }
          case 90: {
            ActivityName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JobLogResponse : pb::IMessage<JobLogResponse> {
    private static readonly pb::MessageParser<JobLogResponse> _parser = new pb::MessageParser<JobLogResponse>(() => new JobLogResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JobLogResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogResponse(JobLogResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JobLogResponse Clone() {
      return new JobLogResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JobLogResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JobLogResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JobLogResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///心跳
  /// </summary>
  public sealed partial class HeartBeatRequest : pb::IMessage<HeartBeatRequest> {
    private static readonly pb::MessageParser<HeartBeatRequest> _parser = new pb::MessageParser<HeartBeatRequest>(() => new HeartBeatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartBeatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatRequest(HeartBeatRequest other) : this() {
      robotState_ = other.robotState_;
      robotUniqueNo_ = other.robotUniqueNo_;
      robotTime_ = other.robotTime_;
      robotIP_ = other.robotIP_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatRequest Clone() {
      return new HeartBeatRequest(this);
    }

    /// <summary>Field number for the "RobotState" field.</summary>
    public const int RobotStateFieldNumber = 1;
    private global::UniWorkforce.Services.RobotState robotState_ = 0;
    /// <summary>
    ///机器人状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.RobotState RobotState {
      get { return robotState_; }
      set {
        robotState_ = value;
      }
    }

    /// <summary>Field number for the "RobotUniqueNo" field.</summary>
    public const int RobotUniqueNoFieldNumber = 2;
    private string robotUniqueNo_ = "";
    /// <summary>
    ///机器人唯一码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotUniqueNo {
      get { return robotUniqueNo_; }
      set {
        robotUniqueNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotTime" field.</summary>
    public const int RobotTimeFieldNumber = 3;
    private string robotTime_ = "";
    /// <summary>
    ///机器人时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotTime {
      get { return robotTime_; }
      set {
        robotTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotIP" field.</summary>
    public const int RobotIPFieldNumber = 4;
    private string robotIP_ = "";
    /// <summary>
    ///机器人IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotIP {
      get { return robotIP_; }
      set {
        robotIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskID" field.</summary>
    public const int TaskIDFieldNumber = 5;
    private string taskID_ = "";
    /// <summary>
    ///任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartBeatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartBeatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RobotState != other.RobotState) return false;
      if (RobotUniqueNo != other.RobotUniqueNo) return false;
      if (RobotTime != other.RobotTime) return false;
      if (RobotIP != other.RobotIP) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RobotState != 0) hash ^= RobotState.GetHashCode();
      if (RobotUniqueNo.Length != 0) hash ^= RobotUniqueNo.GetHashCode();
      if (RobotTime.Length != 0) hash ^= RobotTime.GetHashCode();
      if (RobotIP.Length != 0) hash ^= RobotIP.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RobotState != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RobotState);
      }
      if (RobotUniqueNo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RobotUniqueNo);
      }
      if (RobotTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RobotTime);
      }
      if (RobotIP.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RobotIP);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RobotState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RobotState);
      }
      if (RobotUniqueNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotUniqueNo);
      }
      if (RobotTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotTime);
      }
      if (RobotIP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotIP);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartBeatRequest other) {
      if (other == null) {
        return;
      }
      if (other.RobotState != 0) {
        RobotState = other.RobotState;
      }
      if (other.RobotUniqueNo.Length != 0) {
        RobotUniqueNo = other.RobotUniqueNo;
      }
      if (other.RobotTime.Length != 0) {
        RobotTime = other.RobotTime;
      }
      if (other.RobotIP.Length != 0) {
        RobotIP = other.RobotIP;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RobotState = (global::UniWorkforce.Services.RobotState) input.ReadEnum();
            break;
          }
          case 18: {
            RobotUniqueNo = input.ReadString();
            break;
          }
          case 26: {
            RobotTime = input.ReadString();
            break;
          }
          case 34: {
            RobotIP = input.ReadString();
            break;
          }
          case 42: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeartBeatResponse : pb::IMessage<HeartBeatResponse> {
    private static readonly pb::MessageParser<HeartBeatResponse> _parser = new pb::MessageParser<HeartBeatResponse>(() => new HeartBeatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeartBeatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatResponse(HeartBeatResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeartBeatResponse Clone() {
      return new HeartBeatResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    ///是否需要停止任务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeartBeatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeartBeatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeartBeatResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskRequest : pb::IMessage<TaskRequest> {
    private static readonly pb::MessageParser<TaskRequest> _parser = new pb::MessageParser<TaskRequest>(() => new TaskRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest(TaskRequest other) : this() {
      robotUniqueNo_ = other.robotUniqueNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest Clone() {
      return new TaskRequest(this);
    }

    /// <summary>Field number for the "RobotUniqueNo" field.</summary>
    public const int RobotUniqueNoFieldNumber = 1;
    private string robotUniqueNo_ = "";
    /// <summary>
    ///机器人唯一码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotUniqueNo {
      get { return robotUniqueNo_; }
      set {
        robotUniqueNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RobotUniqueNo != other.RobotUniqueNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RobotUniqueNo.Length != 0) hash ^= RobotUniqueNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RobotUniqueNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RobotUniqueNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RobotUniqueNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotUniqueNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskRequest other) {
      if (other == null) {
        return;
      }
      if (other.RobotUniqueNo.Length != 0) {
        RobotUniqueNo = other.RobotUniqueNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RobotUniqueNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskResponse : pb::IMessage<TaskResponse> {
    private static readonly pb::MessageParser<TaskResponse> _parser = new pb::MessageParser<TaskResponse>(() => new TaskResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskResponse(TaskResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskResponse Clone() {
      return new TaskResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 3;
    private global::UniWorkforce.Services.PackageModel result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.PackageModel Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (result_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::UniWorkforce.Services.PackageModel();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (result_ == null) {
              Result = new global::UniWorkforce.Services.PackageModel();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageModel : pb::IMessage<PackageModel> {
    private static readonly pb::MessageParser<PackageModel> _parser = new pb::MessageParser<PackageModel>(() => new PackageModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageModel(PackageModel other) : this() {
      packageID_ = other.packageID_;
      packageName_ = other.packageName_;
      file_ = other.file_;
      taskID_ = other.taskID_;
      version_ = other.version_;
      taskNo_ = other.taskNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageModel Clone() {
      return new PackageModel(this);
    }

    /// <summary>Field number for the "PackageID" field.</summary>
    public const int PackageIDFieldNumber = 1;
    private string packageID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageID {
      get { return packageID_; }
      set {
        packageID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PackageName" field.</summary>
    public const int PackageNameFieldNumber = 2;
    private string packageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 3;
    private pb::ByteString file_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskID" field.</summary>
    public const int TaskIDFieldNumber = 4;
    private string taskID_ = "";
    /// <summary>
    ///任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 5;
    private string version_ = "";
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskNo" field.</summary>
    public const int TaskNoFieldNumber = 6;
    private string taskNo_ = "";
    /// <summary>
    ///任务编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskNo {
      get { return taskNo_; }
      set {
        taskNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageID != other.PackageID) return false;
      if (PackageName != other.PackageName) return false;
      if (File != other.File) return false;
      if (TaskID != other.TaskID) return false;
      if (Version != other.Version) return false;
      if (TaskNo != other.TaskNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackageID.Length != 0) hash ^= PackageID.GetHashCode();
      if (PackageName.Length != 0) hash ^= PackageName.GetHashCode();
      if (File.Length != 0) hash ^= File.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (TaskNo.Length != 0) hash ^= TaskNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PackageID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackageID);
      }
      if (PackageName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PackageName);
      }
      if (File.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(File);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaskID);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Version);
      }
      if (TaskNo.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TaskNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackageID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageID);
      }
      if (PackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageName);
      }
      if (File.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(File);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (TaskNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageModel other) {
      if (other == null) {
        return;
      }
      if (other.PackageID.Length != 0) {
        PackageID = other.PackageID;
      }
      if (other.PackageName.Length != 0) {
        PackageName = other.PackageName;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.TaskNo.Length != 0) {
        TaskNo = other.TaskNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackageID = input.ReadString();
            break;
          }
          case 18: {
            PackageName = input.ReadString();
            break;
          }
          case 26: {
            File = input.ReadBytes();
            break;
          }
          case 34: {
            TaskID = input.ReadString();
            break;
          }
          case 42: {
            Version = input.ReadString();
            break;
          }
          case 50: {
            TaskNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskStatusRequest : pb::IMessage<TaskStatusRequest> {
    private static readonly pb::MessageParser<TaskStatusRequest> _parser = new pb::MessageParser<TaskStatusRequest>(() => new TaskStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskStatusRequest(TaskStatusRequest other) : this() {
      taskStatus_ = other.taskStatus_;
      taskID_ = other.taskID_;
      robotUniqueNo_ = other.robotUniqueNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskStatusRequest Clone() {
      return new TaskStatusRequest(this);
    }

    /// <summary>Field number for the "TaskStatus" field.</summary>
    public const int TaskStatusFieldNumber = 1;
    private global::UniWorkforce.Services.TaskStatusEnum taskStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.TaskStatusEnum TaskStatus {
      get { return taskStatus_; }
      set {
        taskStatus_ = value;
      }
    }

    /// <summary>Field number for the "TaskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    /// <summary>
    ///任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotUniqueNo" field.</summary>
    public const int RobotUniqueNoFieldNumber = 3;
    private string robotUniqueNo_ = "";
    /// <summary>
    ///机器人唯一码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotUniqueNo {
      get { return robotUniqueNo_; }
      set {
        robotUniqueNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskStatus != other.TaskStatus) return false;
      if (TaskID != other.TaskID) return false;
      if (RobotUniqueNo != other.RobotUniqueNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskStatus != 0) hash ^= TaskStatus.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (RobotUniqueNo.Length != 0) hash ^= RobotUniqueNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskStatus != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TaskStatus);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (RobotUniqueNo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RobotUniqueNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TaskStatus);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (RobotUniqueNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotUniqueNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.TaskStatus != 0) {
        TaskStatus = other.TaskStatus;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      if (other.RobotUniqueNo.Length != 0) {
        RobotUniqueNo = other.RobotUniqueNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskStatus = (global::UniWorkforce.Services.TaskStatusEnum) input.ReadEnum();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
          case 26: {
            RobotUniqueNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskStatusResponse : pb::IMessage<TaskStatusResponse> {
    private static readonly pb::MessageParser<TaskStatusResponse> _parser = new pb::MessageParser<TaskStatusResponse>(() => new TaskStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskStatusResponse(TaskStatusResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskStatusResponse Clone() {
      return new TaskStatusResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRobotTypeRequest : pb::IMessage<GetRobotTypeRequest> {
    private static readonly pb::MessageParser<GetRobotTypeRequest> _parser = new pb::MessageParser<GetRobotTypeRequest>(() => new GetRobotTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRobotTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRobotTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRobotTypeRequest(GetRobotTypeRequest other) : this() {
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRobotTypeRequest Clone() {
      return new GetRobotTypeRequest(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    /// <summary>
    ///登录SessionId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRobotTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRobotTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRobotTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRobotTypeResponse : pb::IMessage<GetRobotTypeResponse> {
    private static readonly pb::MessageParser<GetRobotTypeResponse> _parser = new pb::MessageParser<GetRobotTypeResponse>(() => new GetRobotTypeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRobotTypeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRobotTypeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRobotTypeResponse(GetRobotTypeResponse other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      result_ = other.result_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRobotTypeResponse Clone() {
      return new GetRobotTypeResponse(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::UniWorkforce.Services.ResultCode code_ = 0;
    /// <summary>
    ///是否成功，成功固定返回0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UniWorkforce.Services.ResultCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    ///错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 3;
    private static readonly pb::FieldCodec<global::UniWorkforce.Services.RobotTypeModel> _repeated_result_codec
        = pb::FieldCodec.ForMessage(26, global::UniWorkforce.Services.RobotTypeModel.Parser);
    private readonly pbc::RepeatedField<global::UniWorkforce.Services.RobotTypeModel> result_ = new pbc::RepeatedField<global::UniWorkforce.Services.RobotTypeModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UniWorkforce.Services.RobotTypeModel> Result {
      get { return result_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRobotTypeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRobotTypeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if(!result_.Equals(other.result_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= result_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      result_.WriteTo(output, _repeated_result_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += result_.CalculateSize(_repeated_result_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRobotTypeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      result_.Add(other.result_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::UniWorkforce.Services.ResultCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotTypeModel : pb::IMessage<RobotTypeModel> {
    private static readonly pb::MessageParser<RobotTypeModel> _parser = new pb::MessageParser<RobotTypeModel>(() => new RobotTypeModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotTypeModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UniWorkforce.Services.RobotSDKReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTypeModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTypeModel(RobotTypeModel other) : this() {
      iD_ = other.iD_;
      robotType_ = other.robotType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTypeModel Clone() {
      return new RobotTypeModel(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private string iD_ = "";
    /// <summary>
    ///厂商ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RobotType" field.</summary>
    public const int RobotTypeFieldNumber = 2;
    private string robotType_ = "";
    /// <summary>
    ///厂商名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RobotType {
      get { return robotType_; }
      set {
        robotType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotTypeModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotTypeModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (RobotType != other.RobotType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (RobotType.Length != 0) hash ^= RobotType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (RobotType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RobotType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (RobotType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RobotType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotTypeModel other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.RobotType.Length != 0) {
        RobotType = other.RobotType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 18: {
            RobotType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
