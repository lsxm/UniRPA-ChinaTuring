<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:librarys="clr-namespace:UniStudio.Community.Librarys">

    <librarys:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
    <librarys:BoolNotVisibilityConverter x:Key="BoolNotVisibilityConverter"/>
    <librarys:BoolCollapsedConverter x:Key="BoolCollapsedConverter"/>
    <librarys:BoolNotCollapsedConverter x:Key="BoolNotCollapsedConverter"/>
    <librarys:NullImageConverter x:Key="NullImageConverter"/>
    <librarys:SingleLineTextConverter x:Key="SingleLineTextConverter"/>
    <librarys:SingleLineWithSpaceCombineTextConverter x:Key="SingleLineWithSpaceCombineTextConverter"/>
    <librarys:BoolNotConverter x:Key="BoolNotConverter"/>

    <librarys:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>

    <Style TargetType="MenuItem">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type librarys:ButtonThreeState}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{Binding def_foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type librarys:ButtonThreeState}">
                    <Grid>
                        <Image x:Name="btnbg" Source="{Binding def, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source"  Value="{Binding hover, RelativeSource={RelativeSource TemplatedParent}}" TargetName="btnbg" />
                            <Setter Property="Foreground" Value="{Binding hover_foreground, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Source" Value="{Binding active, RelativeSource={RelativeSource TemplatedParent}}" TargetName="btnbg" />
                            <Setter Property="Foreground" Value="{Binding click_foreground, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Source" Value="{Binding forbid, RelativeSource={RelativeSource TemplatedParent}}" TargetName="btnbg"/>
                            <Setter Property="Foreground" Value="{Binding forbid_foreground, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="ToolTip" Value="">
                            <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type librarys:ColorButtonThreeState}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{Binding def_foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type librarys:ColorButtonThreeState}">
                    <Grid>
                        <Border x:Name="btnbg" Background="{Binding def, RelativeSource={RelativeSource TemplatedParent}}" />
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="btnimg" Margin="2" Source="{Binding def_img, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"  Value="{Binding hover, RelativeSource={RelativeSource TemplatedParent}}" TargetName="btnbg" />
                            <Setter Property="Foreground" Value="{Binding hover_foreground, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding active, RelativeSource={RelativeSource TemplatedParent}}" TargetName="btnbg" />
                            <Setter Property="Foreground" Value="{Binding click_foreground, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{Binding forbid, RelativeSource={RelativeSource TemplatedParent}}" TargetName="btnbg"/>
                            <Setter Property="Foreground" Value="{Binding forbid_foreground, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                        <Trigger Property="ToolTip" Value="">
                            <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>