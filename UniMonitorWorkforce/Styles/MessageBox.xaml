<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
                    >

    <SolidColorBrush x:Key="MyButtonHoverBrush" Color="Red" />
    <SolidColorBrush x:Key="MyButtonPressedBrush" Color="#f1707a" />

    <Style x:Key="MyCloseButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource MyButtonHoverBrush}"></DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource MyButtonPressedBrush}"></DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="0,0,0,0" Background="#007a82">
                            <Border Margin="0,0,0,0" BorderBrush="#007a82" BorderThickness="0" CornerRadius="0,0,0,0"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Path x:Name="path" Fill="Black" Margin="0,0,0,0" Visibility="Collapsed" Height="6"	Width="7" Stretch="Fill" Opacity="1" Data=""/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#D0D7E2" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#D6D6D6"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#AFAFAF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xctk:MessageBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="CaptionForeground" Value="White" />
        <Setter Property="CaptionFontSize" Value="14" />
        <Setter Property="WindowBorderBrush" Value="#007a82" />
        <Setter Property="WindowThickness" Value="0.1" />
        <Setter Property="WindowBackground" Value="#007a82" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="CloseButtonStyle" Value="{StaticResource MyCloseButtonStyle}" />
        <Setter Property="YesButtonContent" Value="是" />
        <Setter Property="NoButtonContent" Value="否" />
        <Setter Property="OkButtonContent" Value="确定" />
        <Setter Property="CancelButtonContent" Value="取消" />
        <Setter Property="YesButtonStyle" Value="{StaticResource MyButtonStyle}" />
        <Setter Property="NoButtonStyle" Value="{StaticResource MyButtonStyle}" />
        <Setter Property="OkButtonStyle" Value="{StaticResource MyButtonStyle}" />
        <Setter Property="CancelButtonStyle" Value="{StaticResource MyButtonStyle}" />
    </Style>
</ResourceDictionary>