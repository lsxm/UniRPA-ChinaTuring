<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetAppCredentials" this:GetAppCredentials.in_Credential="TestRobot-Credential"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:o="clr-namespace:OrchestratorActivity;assembly=OrchestratorActivity"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Username" Type="OutArgument(x:String)" />
    <x:Property Name="in_Credential" Type="InArgument(x:String)" />
    <x:Property Name="out_Password" Type="OutArgument(ss:SecureString)" />
  </x:Members>
  <sap2010:WorkflowViewState.IdRef>Sequence7_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="序列" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <TryCatch sap2010:Annotation.AnnotationText="用法：将 in_Credential 更改为以前创建的 Orchestrator 资产或 Windows 凭据，并使用输出 out_Username 和 out_Password。&#xA;描述：此工作流程安全地获取或创建并使用在其输入处定义的一组凭据。&#xA;它首先尝试从协调器获取它们。&#xA;如果失败，它将尝试从 Windows 凭据管理器中获取它们。&#xA;如果它们不存在，它将创建它们，然后输出它们。" DisplayName="私有：尝试获取凭据资产" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="ss:SecureString" Name="stringPassword" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <o:GetCredential DelayAfter="{x:Null}" DelayBefore="{x:Null}" TimeoutMS="{x:Null}" ContinueOnError="False" CredentialName="[in_Credential]" DisplayName="获取协调器凭证" sap2010:WorkflowViewState.IdRef="GetCredential_1" PassWord="[out_Password]" UserName="[out_Username]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <If Condition="[out_Username is Nothing or out_Password is Nothing]" DisplayName="私有：获取本地" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence DisplayName="私有：从凭证存储获取" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="credentialFound" />
                  </Sequence.Variables>
                  <o:GetCredential DelayAfter="{x:Null}" DelayBefore="{x:Null}" TimeoutMS="{x:Null}" ContinueOnError="False" CredentialName="[in_Credential]" DisplayName="获取安全凭证" sap2010:WorkflowViewState.IdRef="GetCredential_2" PassWord="[out_Password]" UserName="[out_Username]" />
                  <If Condition="[credentialFound]" DisplayName="如果在本地找到" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Else>
                      <Sequence DisplayName="私有：请求和存储凭证" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <o:GetCredential DelayAfter="{x:Null}" DelayBefore="{x:Null}" TimeoutMS="{x:Null}" ContinueOnError="False" CredentialName="[in_Credential]" DisplayName="请求凭证" sap2010:WorkflowViewState.IdRef="GetCredential_3" PassWord="[out_Password]" UserName="[out_Username]" />
                        <If Condition="[Not credentialFound]" DisplayName="如果取消" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <Throw DisplayName="没有凭证" Exception="[new Exception(&quot;未提供凭证&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                          </If.Then>
                          <If.Else>
                            <o:SetCredential DelayAfter="{x:Null}" DelayBefore="{x:Null}" ContinueOnError="False" CredentialName="[in_Credential]" DisplayName="设置凭证" sap2010:WorkflowViewState.IdRef="SetCredential_1" PassWord="[stringPassword]" TimeoutMS="30000" UserName="[out_Username]" />
                          </If.Else>
                        </If>
                        <Assign DisplayName="设置安全密码" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ss:SecureString">[out_Password]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ss:SecureString">[new SecureString()]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence sap2010:Annotation.AnnotationText="To Do!!!" DisplayName="遍历循环 &lt;char&gt;" sap2010:WorkflowViewState.IdRef="Sequence_4" />
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d1JDOlxVc2Vyc1xNaWFvIEdyZWVuXERlc2t0b3Bc5py65Zmo5Lq65LyB5Lia5qGG5p62XEZyYW1ld29ya1xHZXRBcHBDcmVkZW50aWFscy54YW1sIgFsAYEBAQI4A20OAgEBOQVrEAIBAj4JPpMCAgEsRg1nEgIBAz6AAj6QAgIBMT7mAT72AQIBLz6DAT6UAQIBLUYbRlECAQRIEWUcAgEHTBNMnAICASVNE2QYAgEITIkCTJkCAgEqTO8BTP8BAgEoTI0BTJ4BAgEmTSFNNAIBCU8XYiICAQtQGVCgAgIBHlEZWB4CARFZGWAiAgENYRlhnwECAQxQjQJQnQICASNQ8wFQgwICASFQkwFQpAECAR9RJ1E+AgESUx1TkgECARxWHVajAgIBFF5LXl8CARBbTFtaAgEOU0FTZQIBHVb/AVaGAgIBG1aQAlagAgIBGVbiAVb0AQIBF1aCAVaTAQIBFQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetCredential_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetCredential_2" sap:VirtualizedContainerService.HintSize="611,22" />
      <sap2010:ViewStateData Id="GetCredential_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="SetCredential_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,213" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="464,126">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,666">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="611,819" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="633,1005">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="758,1158" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="400,23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="414,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="436,444">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence7_1" sap:VirtualizedContainerService.HintSize="476,524" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>